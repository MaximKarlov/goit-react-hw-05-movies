{"version":3,"file":"static/js/134.5b87c287.chunk.js","mappings":"mJAEMA,EAAU,gCACVC,EAAM,mCAwBNC,EAAM,CAAEC,SAtBU,WAEpB,OADiBC,EAAAA,EAAAA,GAAM,GAAD,OALT,iDAKS,oBAAwBH,GAEjD,EAmBuBI,QAlBD,SAAAC,GAEnB,OADiBF,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,EAAJ,iBAAoBM,EAApB,oBAAkCL,EAAlC,mBAEzB,EAegCM,QAbV,SAAAD,GAEnB,OADiBF,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,EAAJ,iBAAoBM,EAApB,4BAA0CL,EAA1C,mBAEzB,EAUyCO,QATnB,SAAAF,GAEnB,OADiBF,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,EAAJ,iBAAoBM,EAApB,4BAA0CL,EAA1C,0BAEzB,EAMkDQ,UAL1B,SAAAC,GAErB,OADiBN,EAAAA,EAAAA,GAAM,GAAD,OAAIJ,EAAJ,gCAAmCC,EAAnC,iCAA+DS,EAA/D,+BAEzB,GAID,M,+FCxBIC,EAAa,GAmEjB,UAjEe,WAAO,IAAD,EACjB,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACMC,EAAa,UAAGT,EAAaU,IAAI,qBAApB,QAAqC,IAExDC,EAAAA,EAAAA,YAAU,WACFT,EAASU,OAAOC,MAAM,MAAQf,GAC9BgB,EAAAA,GAAAA,UAAchB,GACTiB,MAAK,SAAAC,GACF,OAAOA,EAASC,IACnB,IACAF,MAAK,SAAAG,GACFV,EAAgBU,EAAKC,QACxB,GAEZ,GAAE,CAACjB,EAASU,UAEbD,EAAAA,EAAAA,YAAU,WACFN,IACAS,EAAAA,GAAAA,UAAcL,GACTM,MAAK,SAAAC,GACF,OAAOA,EAASC,IACnB,IACAF,MAAK,SAAAG,GACFV,EAAgBU,EAAKC,QACxB,IAELrB,EAAaW,GAEjBH,GAAe,EAClB,GAAE,CAACD,EAAaI,IAajB,OACI,4BACI,kBAAOW,KAAK,OAAOC,MAAOZ,EAAehB,GAAG,QAAQ6B,UAAWC,EAAAA,EAAAA,aAAkBC,SAT/D,SAAAC,GACtB,GAAuB,KAAnBA,EAAEC,OAAOL,MACT,OAAOpB,EAAgB,CAAC,GAE5BA,EAAgB,CAAE0B,WAAYF,EAAEC,OAAOL,OAC1C,KAKO,mBAAQD,KAAK,SAASQ,QAdV,WAChBtB,GAAe,EAClB,EAYO,oBAGCC,IACG,eAAIe,UAAWC,EAAAA,EAAAA,WAAf,SACKhB,EAAasB,KAAI,gBAAGpC,EAAH,EAAGA,GAAIqC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACd,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKvC,GAAMwC,MAAO,CAAEC,KAAMhC,GAAYoB,UAAWC,EAAAA,EAAAA,UAAzD,SACKO,GAASC,KAFTtC,EADK,QAWrC,C,oBCtED,KAAgB,UAAY,yBAAyB,WAAa,0BAA0B,aAAe,4BAA4B,OAAS,sBAAsB,WAAa,0BAA0B,UAAY,yBAAyB,YAAc,2BAA2B,WAAa,0BAA0B,UAAY,yBAAyB,gBAAkB,+BAA+B,eAAiB,8BAA8B,WAAa,0B","sources":["Api/API.js","pages/Movies.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movie.module.css?a63c"],"sourcesContent":["import axios from 'axios';\nconst TRENDING = 'https://api.themoviedb.org/3/trending/all/week';\nconst BASEURL = 'https://api.themoviedb.org/3/';\nconst KEY = '803e7bed91e4ee56e6b2c367f47ca8e8';\n\nexport const trending = () => {\n    const response = axios(`${TRENDING}?api_key=${KEY}`);\n    return response;\n};\nexport const details = id => {\n    const response = axios(`${BASEURL}movie/${id}?api_key=${KEY}&language=en-US`);\n    return response;\n};\n\nexport const credits = id => {\n    const response = axios(`${BASEURL}movie/${id}/credits?api_key=${KEY}&language=en-US`);\n    return response;\n};\nexport const reviews = id => {\n    const response = axios(`${BASEURL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n    return response;\n};\nexport const searching = seacrhWord => {\n    const response = axios(`${BASEURL}search/movie?api_key=${KEY}&language=en-US&query=${seacrhWord}&page=1&include_adult=false`);\n    return response;\n};\n\nconst api = { trending, details, credits, reviews, searching };\n\nexport default api;\n","import { useEffect, useState } from 'react';\nimport { useLocation, Link, useSearchParams } from 'react-router-dom';\nimport API from '../Api/API';\nimport CSS from './Movie.module.css';\n\nlet prevSearch = '';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams('');\n    const location = useLocation();\n    const [searchStart, setSearchStart] = useState(false);\n    const [searchMovies, setSearchMovies] = useState([]);\n    const searchingWord = searchParams.get('searchWord') ?? '';\n\n    useEffect(() => {\n        if (location.search.slice(12) === prevSearch) {\n            API.searching(prevSearch)\n                .then(response => {\n                    return response.data;\n                })\n                .then(elem => {\n                    setSearchMovies(elem.results);\n                });\n        }\n    }, [location.search]);\n\n    useEffect(() => {\n        if (searchStart) {\n            API.searching(searchingWord)\n                .then(response => {\n                    return response.data;\n                })\n                .then(elem => {\n                    setSearchMovies(elem.results);\n                });\n            // location.search = searchingWord;\n            prevSearch = searchingWord;\n        }\n        setSearchStart(false);\n    }, [searchStart, searchingWord]);\n\n    const handleClick = () => {\n        setSearchStart(true);\n    };\n\n    const updateQueryParams = e => {\n        if (e.target.value === '') {\n            return setSearchParams({});\n        }\n        setSearchParams({ searchWord: e.target.value });\n    };\n\n    return (\n        <div>\n            <input type=\"text\" value={searchingWord} id=\"movie\" className={CSS.movies_input} onChange={updateQueryParams} />\n            <button type=\"submit\" onClick={handleClick}>\n                SEARCH\n            </button>\n            {searchMovies && (\n                <ul className={CSS.home_items}>\n                    {searchMovies.map(({ id, title, name }) => (\n                        <li key={id}>\n                            <Link to={`${id}`} state={{ from: location }} className={CSS.home_link}>\n                                {title || name}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"home_link\":\"Movie_home_link__UHiAR\",\"movie_info\":\"Movie_movie_info__YXTj3\",\"movies_input\":\"Movie_movies_input__55jJo\",\"poster\":\"Movie_poster__YH0bx\",\"items_info\":\"Movie_items_info__5Mu9j\",\"item_text\":\"Movie_item_text__YOGoN\",\"genres_text\":\"Movie_genres_text__wG0Rz\",\"item_title\":\"Movie_item_title__PbWvt\",\"aditional\":\"Movie_aditional__m6LR8\",\"aditional_items\":\"Movie_aditional_items__On7Sv\",\"aditional_item\":\"Movie_aditional_item__4PVI5\",\"home_items\":\"Movie_home_items__+Kfaq\"};"],"names":["BASEURL","KEY","api","trending","axios","details","id","credits","reviews","searching","seacrhWord","prevSearch","useSearchParams","searchParams","setSearchParams","location","useLocation","useState","searchStart","setSearchStart","searchMovies","setSearchMovies","searchingWord","get","useEffect","search","slice","API","then","response","data","elem","results","type","value","className","CSS","onChange","e","target","searchWord","onClick","map","title","name","to","state","from"],"sourceRoot":""}